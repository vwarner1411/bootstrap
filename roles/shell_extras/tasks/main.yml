- name: Determine shell extras target user
  ansible.builtin.set_fact:
    shell_extras_target_user: "{{ shell_user | default(ansible_env.SUDO_USER | default(ansible_env.LOGNAME | default(ansible_env.USER))) }}"
  become: false

- name: Lookup shell extras target home
  ansible.builtin.getent:
    database: passwd
    key: "{{ shell_extras_target_user }}"
  become: false

- name: Set shell extras target home
  ansible.builtin.set_fact:
    shell_extras_target_home: >-
      {{
        (
          shell_home | default('')
          or getent_passwd.get(shell_extras_target_user, [''] * 6)[4]
          or ('/root' if shell_extras_target_user == 'root'
              else '/home/' ~ shell_extras_target_user)
        ) | trim
      }}
  become: false

- name: Set shell extras path facts
  ansible.builtin.set_fact:
    shell_extras_oh_my_zsh_dir: "{{ shell_extras_target_home }}/.oh-my-zsh"
    shell_extras_oh_my_zsh_custom: "{{ shell_extras_target_home }}/.oh-my-zsh/custom"
    shell_extras_zshrc_dir: "{{ shell_extras_target_home }}/.zshrc.d"
    shell_extras_oh_my_zsh_theme_dest: "{{ shell_extras_target_home }}/.oh-my-zsh/custom/themes/dracula"
  become: false

- name: Install oh-my-zsh
  ansible.builtin.git:
    repo: "{{ shell_extras_oh_my_zsh_repo }}"
    dest: "{{ shell_extras_oh_my_zsh_dir }}"
    version: master
    update: true
  become: false
  register: ohmyzsh_clone

- name: Ensure custom plugin directories exist
  ansible.builtin.file:
    path: "{{ shell_extras_oh_my_zsh_custom }}/plugins"
    state: directory
    mode: "0755"
  become: false

- name: Clone Zsh plugins
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    version: "{{ item.version | default('master') }}"
    update: true
  loop: "{{ shell_extras_zsh_plugins }}"
  become: false

- name: Install Dracula theme for oh-my-zsh
  ansible.builtin.git:
    repo: "{{ shell_extras_oh_my_zsh_theme_repo }}"
    dest: "{{ shell_extras_oh_my_zsh_theme_dest }}"
    version: master
    update: true
  become: false

- name: Ensure Zsh completions directory exists
  ansible.builtin.file:
    path: "{{ shell_extras_zshrc_dir }}"
    state: directory
    mode: "0755"
  become: false

- name: Check for managed .zshrc
  ansible.builtin.stat:
    path: "{{ shell_extras_target_home }}/.zshrc"
  register: shell_extras_zshrc_stat
  become: false

- name: Wrap starship init on server profile
  ansible.builtin.replace:
    path: "{{ shell_extras_target_home }}/.zshrc"
    regexp: '^\s*eval "\$\((?:starship init zsh)\)"\s*$'
    replace: |-
      if command -v starship >/dev/null 2>&1; then
        eval "$(starship init zsh)"
      fi
  become: false
  when:
    - (profile | default('desktop')) == 'server'
    - shell_extras_zshrc_stat.stat.exists
